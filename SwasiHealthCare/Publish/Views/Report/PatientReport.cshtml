@model List<SwasiHealthCare.Model.PatientModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var patientlist = new SelectList(ViewBag.patientlist, "PatientId", "PatientIDNumber");
    var hospitallist = new SelectList(ViewBag.hospitallist, "HospitalId", "HospitalName");
    var rolid = Convert.ToInt64(Session["RoleId"]);
}
<div class="row clearfix">
    <div class="col-sm-12">
        <div class="card">
            <div class="body" style="height:  160px;">
                <form>
                    <div class="row">
                        <div class="input-group-append">
                            @if (rolid == 1)
                            {
                                <div class="form-group col-lg-3 col-md-6 col-sm-12">
                                    <i class="fa fa-user" aria-hidden="true"></i>
                                    @Html.Label("HospitalId", "Hospital")<span style="padding-left:2px;color:red">*</span>
                                    @Html.DropDownListFor(model => model.FirstOrDefault().filterModel.HospitalId, hospitallist, "Select Hospital", new { @class = "form-control input-default borderclr", id = "HospitalId" })
                                    @Html.ValidationMessageFor(model => model.FirstOrDefault().filterModel.HospitalId, "", new { @class = "text-danger" })
                                </div>
                            }
                            <div class="form-group col-lg-3 col-md-6 col-sm-12">
                                <i class="fa fa-user" aria-hidden="true"></i>
                                @Html.Label("Serach", "Serach")
                                <input id="myInput" class="for
                                       m-control input-default borderclr" type="text" placeholder="Search..">
                            </div>
                            @*<div class="form-group col-lg-3 col-md-6 col-sm-12">
                                    <i class="fa fa-user" aria-hidden="true"></i>
                                    @Html.Label("CR. No", "CR. No")<span style="padding-left:2px;color:red">*</span>
                                    @Html.DropDownListFor(model => model.FirstOrDefault().filterModel.PatientId, patientlist, "--Select CR. No--", new { @class = "form-control input-default borderclr", Maxlength = 30, id = "PatientId" })
                                    @Html.ValidationMessageFor(model => model.FirstOrDefault().filterModel.PatientId, "", new { @class = "text-danger" })
                                </div>*@
                            <div class="form-group col-lg-3 col-md-6 col-sm-12">
                                <i class="fa fa-calendar" aria-hidden="true"></i>
                                @Html.Label("FromDate", "From Date")<span style="padding-left:2px;color:red">*</span>
                                @Html.TextBoxFor(model => model.FirstOrDefault().filterModel.FromDate, new { @class = "form-control input-default borderclr", data_provide = "datepicker", data_date_autoclose = "true", id = "FromDate" })
                                @Html.ValidationMessageFor(model => model.FirstOrDefault().filterModel.FromDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-lg-3 col-md-6 col-sm-12">
                                <i class="fa fa-calendar" aria-hidden="true"></i>
                                @Html.Label("ToDate", "To Date")<span style="padding-left:2px;color:red">*</span>
                                @Html.TextBoxFor(model => model.FirstOrDefault().filterModel.ToDate, new { @class = "form-control input-default borderclr", data_provide = "datepicker", data_date_autoclose = "true", id = "ToDate" })
                                @Html.ValidationMessageFor(model => model.FirstOrDefault().filterModel.ToDate, "", new { @class = "text-danger" })
                            </div>


                        </div>
                    </div>
                    <div class="row" style="margin-top: -27px;margin-left: 1px;">
                        <div class="form-row mt-2" style="padding-left:-1.5rem!important">
                            <div class="form-group col-lg-3 col-md-6 col-sm-12">
                                <button type="submit" id="btnReportSave" class="btn  btn-sm btn-outline-primary borderradius" style="margin-top: 28px;">Search</button>
                                <button type="reset" onclick="clear()" class="btn btn-sm btn-outline-dark borderradius" style="margin-left: 70px; margin-top: -56px;">Reset</button>
                                <button type="submit" onclick="exportexcel()" class="btn btn-sm btn-outline-secondary borderradius" style="margin-left: 130px; margin-top: -97px;">Excel</button>
                                <button type="submit" onclick="generate()" id="btnExport" class="btn  btn-sm btn-outline-danger borderradius" style="margin-left: 190px;margin-top: -140px;">PDF</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-hover table-custom spacing5" id="patient_list">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>CR. No</th>
                        <th>Date</th>
                        <th>Name</th>
                        <th>Mobile No</th>
                        <th>Health Issue</th>
                        <th>Consulting Doctor</th>
                    </tr>
                </thead>
                <tbody id="srchptnt">
                    @{
                        var index = 1;
                        foreach (var item in Model)
                        {
                            <tr class="content">
                                <td>@index</td>
                                <td>@item.PatientIdNumber</td>
                                <td>@item.PatientCreatedDate.ToString("dd/MM/yyyy")</td>
                                <td>@item.PatientName</td>
                                <td>@item.PatientMobileNumber</td>
                                <td>@item.PatientPrimaryComplaints</td>
                                <td>@item.PatientDoctorName</td>
                                <td hidden>@item.HospitalName</td>
                            </tr>
                            index++;
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/Patient/Patient.js"></script>
    <script src="~/Theme/Html/assets/vendor/dropify/js/dropify.min.js"></script>
    <script src="~/Theme/Html/assets/vendor/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/ExportExcel/jquery.table2excel.js"></script>
    <script src="~/Scripts/ExportExcel/jquery.table2excel.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.22/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
    <script>
        $("#myInput").on("keyup", function () {
            debugger;
            var value = $(this).val().toLowerCase();
            $("#srchptnt tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
        $("#HospitalId").change(function () {
            $("#btnReportSave").click();
        });
        function exportexcel() {
            $("#patient_list").table2excel({
                name: "Table2Excel",
                filename: "PatientReport",
                fileext: ".xls"
            });
        }
        function clear() {
            $("#FromDate").val("");
            $("#ToDate").val("");
        }


        function generate() {
            html2canvas($('#patient_list')[0], {
                onrendered: function (canvas) {
                    var data = canvas.toDataURL();
                    var docDefinition = {
                        content: [{
                            image: data,
                            width: 500
                        }]
                    };
                    pdfMake.createPdf(docDefinition).download("Table.pdf");
                }
            });
            return false;
        }

        $(document).ready(function () {
            $("#allreport").trigger("click");
            $("#patientreport").addClass("active");
            $("#page_name").text("Patient Report,");
            $("#searchpatient").on("keyup", function () {
                var value = $(this).val();
                $("table tr").each(function (index) {
                    debugger;
                    if (index != 0) {
                        $row = $(this);
                        var id = $row.find("td:eq(1)").text();

                        if (id.indexOf(value) != 0) {
                            $(this).hide();
                        }
                        else {
                            $(this).show();
                        }
                    }
                });
            });
            var date = new Date();
            var todaydate = (((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + '/' + ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + '/' + date.getFullYear());
            $("#FromDate").val(todaydate);
            $("#ToDate").val(todaydate);
        });
    </script>
}

